#include <stdio.h>
#include <ctype.h>

#define size 50

char stack[50];
int top=-1;

int push(char elem)
{
    stack[++top]=elem;
}
char pop()
{
    return (stack[top--]);
}

int precedence(char symbol)
{
    if(symbol=='^')
    {
        return(3);
    }
    if(symbol=='*' || symbol=='/')
    {
        return(2);
    }
    if(symbol=='+' || symbol=='-')
    {
        return(1);
    }
    else
    {
        return(0);
    }
}

void main()
{
    char infix[50],postfix[50],ch,elem;
    int i=0, k=0;
    printf("Enter valid infix: ");
    scanf("%s",&infix);
    push('#');
    
    while((ch=infix[i++])!='\0')
    {
        if(ch=='(')
        {
            push(ch);
        }
        else if(ch==')')
        {
            while(stack[top]!='(')
                postfix[k++]=pop();
            elem=pop();
        }
        else
        {
            while(precedence(stack[top])>precedence(ch))
                postfix[k++]=pop();
            push(ch);
        }
    }
    while(stack[top]!='#')
        postfix[k++]=pop();
    postfix[k]='\0';
    printf("Postfix expression: %s",postfix);
}
